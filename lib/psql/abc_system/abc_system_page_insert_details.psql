/**
 * Inserts a new page.
 *
 * @param p_wrd_id      The ID of the word of the page title.
 * @param p_ptb_id      The ID of the page tab to which the page belongs (optional).
 * @param p_pag_id_org  The ID of master page of the new page (optional).
 * @param p_pag_alias   The alias of the new page.
 * @param p_pag_class   The class of the new page.
 * @param p_pag_label   The label of the new page.
 * @param p_pag_weight  The weight of the page inside a page group.
 *
 * @type singleton1 int
 */
create procedure abc_system_page_insert_details
(
  in p_wrd_id     smallint(5) unsigned, --               type: ABC_AUTH_PAGE.wrd_id
  in p_ptb_id     tinyint(3) unsigned, --                type: ABC_AUTH_PAGE.ptb_id
  in p_pag_id_org smallint(5) unsigned, --               type: ABC_AUTH_PAGE.pag_id
  in p_pag_alias  varchar(32) character set utf8mb4, --  type: ABC_AUTH_PAGE.pag_alias
  in p_pag_class  varchar(128) character set utf8mb4, -- type: ABC_AUTH_PAGE.pag_class
  in p_pag_label  varchar(128) character set ascii, --   type: ABC_AUTH_PAGE.pag_label
  in p_pag_weight int(11) --                             type: ABC_AUTH_PAGE.pag_weight
)
  modifies sql data
begin
  declare l_pag_id smallint(5) unsigned; -- type: ABC_AUTH_PAGE.pag_id

  insert into ABC_AUTH_PAGE( wrd_id
                           , ptb_id
                           , pag_id_org
                           , pag_alias
                           , pag_class
                           , pag_label
                           , pag_weight )
  values ( p_wrd_id
         , p_ptb_id
         , p_pag_id_org
         , p_pag_alias
         , p_pag_class
         , p_pag_label
         , p_pag_weight );

  set l_pag_id = last_insert_id();

  if p_ptb_id is not null and p_pag_id_org is null then
    update ABC_AUTH_PAGE
    set pag_id_org = l_pag_id
    where pag_id = l_pag_id;
  end if;

  select l_pag_id as pag_id;
end
